# This file is part of sygil-webui (https://github.com/Sygil-Dev/sygil-webui/).

# Copyright 2022 Sygil-Dev team.
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.

# You should have received a copy of the GNU Affero General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>. 

# UI defaults configuration file. Is read automatically if located at configs/webui/webui.yaml, or specify path via --defaults.

txt2img:
  prompt:
  ddim_steps: 50
  # Adding an int to toggles enables the corresponding feature.
  #  0:  Create prompt matrix (separate multiple prompts using |, and get all combinations of them)
  #  1:  Normalize Prompt Weights (ensure sum of weights add up to 1.0)
  #  2:  Save individual images
  #  3:  Save grid
  #  4:  Sort samples by prompt
  #  5:  Write sample info files
  #  6:  write sample info to log file
  #  7:  jpg samples
  #  8:  Filter NSFW content
  #  9:  Fix faces using GFPGAN
  #  10:  Upscale images using RealESRGAN
  toggles: [1, 2, 3, 4, 5]
  sampler_name: k_lms
  ddim_eta: 0.0  # legacy name, applies to all algorithms.
  n_iter: 1
  batch_size: 1
  cfg_scale: 7.5
  # Leave blank for random seed:
  seed:
  height: 512
  width: 512
  # Textual inversion embeddings file path:
  fp:

img2img:
  prompt:
  ddim_steps: 50
  # Adding an int to toggles enables the corresponding feature.
  # 0: Create prompt matrix (separate multiple prompts using |, and get all combinations of them)
  # 1: Normalize Prompt Weights (ensure sum of weights add up to 1.0)
  # 2: Loopback (use images from previous batch when creating next batch)
  # 3: Random loopback seed
  # 4: Save individual images
  # 5: Save grid
  # 6: Sort samples by prompt
  # 7: Write sample info files
  # 8: jpg samples
  # 9: Color correction
  # 10: Filter NSFW content
  # 11: Fix faces using GFPGAN
  # 12: Upscale images using Real-ESRGAN
  toggles: [1, 4, 5, 6, 7]
  sampler_name: k_lms
  ddim_eta: 0.0
  n_iter: 1
  batch_size: 1
  cfg_scale: 5.0
  denoising_strength: 0.75
  # 0: Keep masked area
  # 1: Regenerate only masked area
  mask_mode: 0
  # 0: Just resize
  # 1: Crop and resize
  # 2: Resize and fill
  resize_mode: 0
  # Leave blank for random seed:
  seed:
  height: 512
  width: 512
  # Textual inversion embeddings file path:
  fp:

gfpgan:
  strength: 100
